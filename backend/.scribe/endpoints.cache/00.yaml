## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login user.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/forgot-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Forgot password - send reset token.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/reset-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset password.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/schools
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Schools retrieved successfully","data":{"current_page":1,"data":[],"first_page_url":"http:\/\/localhost:8000\/api\/public\/schools?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/public\/schools?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/public\/schools?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/public\/schools","per_page":15,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/public/schools/{school_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      school_id:
        name: school_id
        description: 'The ID of the school.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      school_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\School] 17"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/public/schools/region/{region}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get schools by region.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      region:
        name: region
        description: 'The region.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      region: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Schools retrieved successfully","data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/sports
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Sports retrieved successfully","data":{"current_page":1,"data":[],"first_page_url":"http:\/\/localhost:8000\/api\/public\/sports?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/public\/sports?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/public\/sports?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/public\/sports","per_page":15,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/public/sports/{sport_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sport_id:
        name: sport_id
        description: 'The ID of the sport.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sport_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Sport] 17"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/public/sports/category/{category}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get sports by category.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category:
        name: category
        description: 'The category.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      category: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Sports retrieved successfully","data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/schedules
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Schedules retrieved successfully","data":{"current_page":1,"data":[],"first_page_url":"http:\/\/localhost:8000\/api\/public\/schedules?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/public\/schedules?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/public\/schedules?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/public\/schedules","per_page":15,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/schedules/upcoming
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get upcoming schedules.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Upcoming schedules retrieved successfully","data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/matches
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Game matches retrieved successfully","data":{"current_page":1,"data":[],"first_page_url":"http:\/\/localhost:8000\/api\/public\/matches?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/public\/matches?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/public\/matches?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/public\/matches","per_page":15,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/matches/upcoming
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get upcoming matches.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Upcoming matches retrieved successfully","data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/matches/completed
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get completed matches.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Completed matches retrieved successfully","data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/results
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Results retrieved successfully","data":{"current_page":1,"data":[],"first_page_url":"http:\/\/localhost:8000\/api\/public\/results?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/public\/results?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/public\/results?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/public\/results","per_page":15,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/results/recent
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get recent results.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve recent results","error":"Call to undefined method App\\Models\\Result::gameMatch()"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/rankings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Rankings retrieved successfully","data":{"current_page":1,"data":[],"first_page_url":"http:\/\/localhost:8000\/api\/public\/rankings?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/public\/rankings?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/public\/rankings?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/public\/rankings","per_page":15,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/public/rankings/sport/{sportId}/teams'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get team rankings by sport and season.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sportId:
        name: sportId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sportId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve team rankings","error":"SQLSTATE[42S22]: Column not found: 1054 Unknown column ''season_year'' in ''where clause'' (Connection: mysql, SQL: select * from `rankings` where `sport_id` = 17 and `ranking_type` = team and `season_year` = 2025 order by `rank` asc)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/public/rankings/sport/{sportId}/individuals'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get individual rankings by sport and season.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sportId:
        name: sportId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sportId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve individual rankings","error":"SQLSTATE[42S22]: Column not found: 1054 Unknown column ''season_year'' in ''where clause'' (Connection: mysql, SQL: select * from `rankings` where `sport_id` = 17 and `ranking_type` = individual and `season_year` = 2025 order by `rank` asc)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/rankings/top-performers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get top performers.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve top performers","error":"SQLSTATE[42S22]: Column not found: 1054 Unknown column ''season_year'' in ''where clause'' (Connection: mysql, SQL: select * from `rankings` where `season_year` = 2025 and `rank` <= 10 order by `sport_id` asc, `ranking_type` asc, `rank` asc)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/medals
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Medal tallies retrieved successfully","data":{"current_page":1,"data":[],"first_page_url":"http:\/\/localhost:8000\/api\/public\/medals?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/public\/medals?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/public\/medals?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/public\/medals","per_page":15,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/medals/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get overall medal statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve overall medal statistics","error":"SQLSTATE[42S22]: Column not found: 1054 Unknown column ''event_year'' in ''where clause'' (Connection: mysql, SQL: select count(*) as aggregate from `medal_tallies` where `event_year` = 2025 and `medal_type` = gold)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/medals/school-ranking
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get school medal ranking.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve school medal ranking","error":"SQLSTATE[42S22]: Column not found: 1054 Unknown column ''school_id'' in ''field list'' (Connection: mysql, SQL: select \n                    school_id,\n                    SUM(CASE WHEN medal_type = \"gold\" THEN 1 ELSE 0 END) as gold_count,\n                    SUM(CASE WHEN medal_type = \"silver\" THEN 1 ELSE 0 END) as silver_count,\n                    SUM(CASE WHEN medal_type = \"bronze\" THEN 1 ELSE 0 END) as bronze_count,\n                    COUNT(*) as total_medals,\n                    (SUM(CASE WHEN medal_type = \"gold\" THEN 3 ELSE 0 END) +\n                     SUM(CASE WHEN medal_type = \"silver\" THEN 2 ELSE 0 END) +\n                     SUM(CASE WHEN medal_type = \"bronze\" THEN 1 ELSE 0 END)) as total_points\n                 from `medal_tallies` where `event_year` = 2025 group by `school_id` order by `total_points` desc, `gold_count` desc, `silver_count` desc, `bronze_count` desc)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/tournaments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Tournaments retrieved successfully","data":{"current_page":1,"data":[],"first_page_url":"http:\/\/localhost:8000\/api\/public\/tournaments?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/public\/tournaments?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/public\/tournaments?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/public\/tournaments","per_page":15,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/tournaments/upcoming
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get upcoming tournaments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Upcoming tournaments retrieved successfully","data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/tournaments/ongoing
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get ongoing tournaments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Ongoing tournaments retrieved successfully","data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/public/tournaments/completed
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get completed tournaments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Completed tournaments retrieved successfully","data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout-all
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout from all devices.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/me
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get authenticated user.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/refresh
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Refresh token.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/role/{role}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get users by role.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      role:
        name: role
        description: 'The role.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      role: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users/profile
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user profile (for authenticated user).'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/users/profile
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user profile (for authenticated user).'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/change-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Change user password.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{user}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/users/{user}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{user}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/schools
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/schools
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/schools/{school_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      school_id:
        name: school_id
        description: 'The ID of the school.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      school_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/schools/{school_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      school_id:
        name: school_id
        description: 'The ID of the school.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      school_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/schools/{school_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      school_id:
        name: school_id
        description: 'The ID of the school.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      school_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/schools/{school_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get school statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      school_id:
        name: school_id
        description: 'The ID of the school.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      school_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/schools/region/{region}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get schools by region.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      region:
        name: region
        description: 'The region.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      region: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/athletes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/athletes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/athletes/{athlete_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      athlete_id:
        name: athlete_id
        description: 'The ID of the athlete.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      athlete_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/athletes/{athlete_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      athlete_id:
        name: athlete_id
        description: 'The ID of the athlete.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      athlete_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/athletes/{athlete_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      athlete_id:
        name: athlete_id
        description: 'The ID of the athlete.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      athlete_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/athletes/school/{schoolId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get athletes by school.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      schoolId:
        name: schoolId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      schoolId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/athletes/sport/{sportId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get athletes by sport.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sportId:
        name: sportId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sportId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/sports
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/sports
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/sports/{sport_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sport_id:
        name: sport_id
        description: 'The ID of the sport.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sport_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/sports/{sport_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sport_id:
        name: sport_id
        description: 'The ID of the sport.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sport_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/sports/{sport_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sport_id:
        name: sport_id
        description: 'The ID of the sport.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sport_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/sports/category/{category}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get sports by category.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category:
        name: category
        description: 'The category.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      category: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/sports/{sport_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get sport statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sport_id:
        name: sport_id
        description: 'The ID of the sport.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sport_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teams
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teams
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teams/{team_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teams/{team_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teams/{team_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teams/school/{schoolId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teams by school.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      schoolId:
        name: schoolId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      schoolId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teams/sport/{sportId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teams by sport.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sportId:
        name: sportId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sportId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teams/{team_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get team statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/teams/{team_id}/performance'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update team performance stats.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/venues
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/venues
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/venues/{venue_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      venue_id:
        name: venue_id
        description: 'The ID of the venue.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      venue_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/venues/{venue_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      venue_id:
        name: venue_id
        description: 'The ID of the venue.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      venue_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/venues/{venue_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      venue_id:
        name: venue_id
        description: 'The ID of the venue.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      venue_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/venues/school/{schoolId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get venues by school.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      schoolId:
        name: schoolId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      schoolId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/venues/type/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get venues by type.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/venues/{venue_id}/availability'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get venue availability.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      venue_id:
        name: venue_id
        description: 'The ID of the venue.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      venue_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/venues/{venue_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get venue statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      venue_id:
        name: venue_id
        description: 'The ID of the venue.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      venue_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/schedules
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/schedules
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/schedules/date-range
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get schedules by date range.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/schedules/upcoming
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get upcoming schedules.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/schedules/sport/{sportId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get schedules by sport.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sportId:
        name: sportId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sportId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/schedules/venue/{venueId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get schedules by venue.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      venueId:
        name: venueId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      venueId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/schedules/{schedule_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      schedule_id:
        name: schedule_id
        description: 'The ID of the schedule.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      schedule_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/schedules/{schedule_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      schedule_id:
        name: schedule_id
        description: 'The ID of the schedule.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      schedule_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/schedules/{schedule_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      schedule_id:
        name: schedule_id
        description: 'The ID of the schedule.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      schedule_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/schedules/{schedule_id}/status'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update schedule status.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      schedule_id:
        name: schedule_id
        description: 'The ID of the schedule.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      schedule_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/matches
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/matches
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/matches/team/{teamId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get matches by team.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teamId:
        name: teamId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teamId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/matches/upcoming
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get upcoming matches.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/matches/completed
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get completed matches.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/matches/{gameMatch_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gameMatch_id:
        name: gameMatch_id
        description: 'The ID of the gameMatch.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gameMatch_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/matches/{gameMatch_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gameMatch_id:
        name: gameMatch_id
        description: 'The ID of the gameMatch.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gameMatch_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/matches/{gameMatch_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gameMatch_id:
        name: gameMatch_id
        description: 'The ID of the gameMatch.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gameMatch_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/matches/{gameMatch_id}/score'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update match score.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gameMatch_id:
        name: gameMatch_id
        description: 'The ID of the gameMatch.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gameMatch_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/officials
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/officials
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/officials/sport/{sportId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get officials by sport ID (checking sports_certified JSON field).'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sportId:
        name: sportId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sportId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/officials/type/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get officials by type.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/officials/certification/{level}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get officials by certification level.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      level:
        name: level
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      level: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/officials/available
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get available officials for assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/officials/{official_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      official_id:
        name: official_id
        description: 'The ID of the official.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      official_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/officials/{official_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      official_id:
        name: official_id
        description: 'The ID of the official.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      official_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/officials/{official_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      official_id:
        name: official_id
        description: 'The ID of the official.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      official_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/rankings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/rankings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/rankings/{ranking_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ranking_id:
        name: ranking_id
        description: 'The ID of the ranking.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ranking_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/rankings/{ranking_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ranking_id:
        name: ranking_id
        description: 'The ID of the ranking.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ranking_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/rankings/{ranking_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ranking_id:
        name: ranking_id
        description: 'The ID of the ranking.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ranking_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/rankings/sport/{sportId}/teams'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get team rankings by sport and season.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sportId:
        name: sportId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sportId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/rankings/sport/{sportId}/individuals'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get individual rankings by sport and season.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sportId:
        name: sportId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sportId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/rankings/top-performers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get top performers.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/rankings/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update rankings based on latest results.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/rankings/sport/{sportId}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get ranking statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sportId:
        name: sportId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sportId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/medals
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/medals
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/medals/{medalTally_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      medalTally_id:
        name: medalTally_id
        description: 'The ID of the medalTally.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      medalTally_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/medals/{medalTally_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      medalTally_id:
        name: medalTally_id
        description: 'The ID of the medalTally.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      medalTally_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/medals/{medalTally_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      medalTally_id:
        name: medalTally_id
        description: 'The ID of the medalTally.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      medalTally_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/medals/school/{schoolId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get medal tally by school.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      schoolId:
        name: schoolId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      schoolId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/medals/sport/{sportId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get medal tally by sport.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sportId:
        name: sportId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sportId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/medals/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get overall medal statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/medals/school-ranking
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get school medal ranking.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/medals/top-performers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get top performers.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/results
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/results
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/results/{result_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      result_id:
        name: result_id
        description: 'The ID of the result.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      result_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/results/{result_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      result_id:
        name: result_id
        description: 'The ID of the result.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      result_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/results/{result_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      result_id:
        name: result_id
        description: 'The ID of the result.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      result_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/results/team/{teamId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get results by team.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teamId:
        name: teamId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teamId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/results/sport/{sportId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get results by sport.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sportId:
        name: sportId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sportId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/results/recent
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get recent results.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/results/match/{gameMatchId}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get match statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gameMatchId:
        name: gameMatchId
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gameMatchId: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/results/{result_id}/verify'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verify result.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      result_id:
        name: result_id
        description: 'The ID of the result.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      result_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/results/team/{teamId}/performance'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get team performance summary.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teamId:
        name: teamId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teamId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tournaments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tournaments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tournaments/sport/{sportId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get tournaments by sport.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sportId:
        name: sportId
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sportId: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tournaments/upcoming
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get upcoming tournaments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tournaments/ongoing
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get ongoing tournaments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tournaments/completed
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get completed tournaments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tournaments/{tournament_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tournament_id:
        name: tournament_id
        description: 'The ID of the tournament.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tournament_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tournaments/{tournament_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tournament_id:
        name: tournament_id
        description: 'The ID of the tournament.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tournament_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tournaments/{tournament_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tournament_id:
        name: tournament_id
        description: 'The ID of the tournament.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tournament_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/tournaments/{tournament_id}/register'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register participant for tournament.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tournament_id:
        name: tournament_id
        description: 'The ID of the tournament.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tournament_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/tournaments/{tournament_id}/status'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update tournament status.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tournament_id:
        name: tournament_id
        description: 'The ID of the tournament.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tournament_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tournaments/{tournament_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get tournament statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tournament_id:
        name: tournament_id
        description: 'The ID of the tournament.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tournament_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/prisaa-years
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of PRISAA years.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/prisaa-years
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created PRISAA year.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/prisaa-years/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get yearly statistics and trends.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/prisaa-years/{prisaaYear_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified PRISAA year.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      prisaaYear_id:
        name: prisaaYear_id
        description: 'The ID of the prisaaYear.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      prisaaYear_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/prisaa-years/{prisaaYear_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified PRISAA year.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      prisaaYear_id:
        name: prisaaYear_id
        description: 'The ID of the prisaaYear.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      prisaaYear_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/prisaa-years/{prisaaYear_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified PRISAA year.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      prisaaYear_id:
        name: prisaaYear_id
        description: 'The ID of the prisaaYear.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      prisaaYear_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/prisaa-years/{prisaaYear_id}/multi-level'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get multi-level breakdown for a specific year.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      prisaaYear_id:
        name: prisaaYear_id
        description: 'The ID of the prisaaYear.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      prisaaYear_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/overall-champions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of overall champions.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/overall-champions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created overall champion.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/overall-champions/by-year/{year}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get champions by year.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      year:
        name: year
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      year: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/overall-champions/by-level/{level}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get champions by level.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      level:
        name: level
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      level: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/overall-champions/{overallChampion_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified overall champion.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      overallChampion_id:
        name: overallChampion_id
        description: 'The ID of the overallChampion.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      overallChampion_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/overall-champions/{overallChampion_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified overall champion.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      overallChampion_id:
        name: overallChampion_id
        description: 'The ID of the overallChampion.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      overallChampion_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/overall-champions/{overallChampion_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified overall champion.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      overallChampion_id:
        name: overallChampion_id
        description: 'The ID of the overallChampion.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      overallChampion_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/health
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"healthy","database":"connected","timestamp":"2025-09-03T09:21:55.907471Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/test-admin
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/test-coach
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/documentation
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"title":"PRISAA Management System API","version":"3.0.0","description":"Complete API for Private Schools Athletic Association Games Management","base_url":"http:\/\/localhost:8000\/api","authentication":{"type":"Bearer Token","header":"Authorization: Bearer {token}","login_endpoint":"\/api\/auth\/login"},"endpoints":{"total_endpoints":163,"public_endpoints":27,"protected_endpoints":136},"features":{"multi_level_tournaments":"Provincial, Regional, National","historical_tracking":"2017-2025 PRISAA Games records","role_based_access":"Admin, Manager, User roles","comprehensive_filtering":"Advanced query parameters","real_time_results":"Live match results and medal tallies"},"main_endpoints":{"authentication":{"POST \/api\/auth\/login":"User authentication","POST \/api\/auth\/register":"User registration","POST \/api\/auth\/logout":"User logout","GET \/api\/auth\/me":"Get current user"},"prisaa_management":{"GET \/api\/prisaa-years":"List PRISAA years (2017-2025)","GET \/api\/overall-champions":"Multi-level champions","GET \/api\/tournaments":"Tournament management","GET \/api\/schools":"School management"},"sports_management":{"GET \/api\/sports":"Sports management","GET \/api\/athletes":"Athlete management","GET \/api\/teams":"Team management","GET \/api\/matches":"Match management"},"results_tracking":{"GET \/api\/results":"Competition results","GET \/api\/rankings":"Performance rankings","GET \/api\/medals":"Medal tallies","GET \/api\/schedules":"Event scheduling"}},"documentation_formats":{"postman_collection":"http:\/\/localhost:8000\/docs\/collection.json","openapi_spec":"http:\/\/localhost:8000\/docs\/openapi.yaml","documentation_home":"http:\/\/localhost:8000\/docs"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
          set-cookie: 'XSRF-TOKEN=eyJpdiI6IkdZcUZ3Vi9NVW81aENUMkxrc0pLM0E9PSIsInZhbHVlIjoiZk5NZTRZeS9ZU08ydTl1UEhHZ0xnVzUrUDdVd0JpWVJVMlJLNHd3MjNBR0ZqbCtpalN3Z1FJc0tMUVNKeUNIZ2pSZWJsdkJRd1BVN05LMXVjRmNJWHZOSGdVOE5nZ2FkODIybU5ud0FaK201cW5USWVZQ2o4V0hSVkVKVVdkNm4iLCJtYWMiOiI0MTI1ODZlMzM2MjI4NzA3MzA3Y2VlZDBlMzI0MzNjMDJjY2QwN2E5Mzk0NmJjMjY1MDViZjA3NWYzYWY3ZThmIiwidGFnIjoiIn0%3D; expires=Wed, 03 Sep 2025 11:21:55 GMT; Max-Age=7200; path=/; samesite=lax; prisaa_sports_management_system_session=eyJpdiI6Ikt5aEQwMEwvSGh4eERGY3lyblZCOXc9PSIsInZhbHVlIjoiaEJsYWNkbmtiZGRuVG9Eb2VYQ21qdExzNUtQNGxrOGQzM0dsd3hkS2pDR3J6SEZ1Nnk2L2t4dTNrSnJZb2JFOHRLbnFyUUNaR1FaQWdnMTVZVlYxUFVqZWdXWEFPN0xvZjRVYWIzaXpaZ1dJZFpUT0dmbVdocWRnazU3RDBXNUYiLCJtYWMiOiI0YjE4MWUyMGFiYTUyMzgzYzY5NDIxMzRlYjlhOTg4M2QwZThlOTJkYjQyMDUyOTc4ZDhlYzY3OTA2OTA4Y2IwIiwidGFnIjoiIn0%3D; expires=Wed, 03 Sep 2025 11:21:55 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/documentation/preview
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>PRISAA Sports Management System - API Documentation v1.0</title>\r\n    <style>\r\n        @page { margin: 15mm; size: A4; }\r\n        body { font-family: 'DejaVu Sans', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.5; color: #2c3e50; margin: 0; padding: 0; font-size: 10px; }\r\n        .header { text-align: center; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 25px; margin-bottom: 25px; border-radius: 8px; }\r\n        .header h1 { font-size: 24px; margin: 0 0 8px 0; font-weight: 700; letter-spacing: -0.5px; }\r\n        .header .subtitle { font-size: 14px; opacity: 0.9; margin: 0; font-weight: 300; }\r\n        .header .version { background: rgba(255,255,255,0.2); padding: 4px 12px; border-radius: 15px; font-size: 12px; margin-top: 10px; display: inline-block; }\r\n        .toc { background-color: #f8f9fa; border-radius: 6px; padding: 20px; margin-bottom: 25px; border-left: 4px solid #667eea; }\r\n        .toc h2 { color: #2c3e50; font-size: 16px; margin: 0 0 15px 0; font-weight: 600; }\r\n        .toc ul { list-style: none; padding: 0; margin: 0; columns: 2; column-gap: 30px; }\r\n        .toc li { margin: 6px 0; padding: 3px 0; }\r\n        .toc a { color: #5a67d8; text-decoration: none; font-weight: 500; }\r\n        .section { margin-bottom: 30px; page-break-inside: avoid; }\r\n        .section-title { color: #2c3e50; font-size: 20px; font-weight: 700; border-bottom: 3px solid #667eea; padding-bottom: 8px; margin-bottom: 20px; background: linear-gradient(90deg, #667eea, #764ba2); -webkit-background-clip: text; background-clip: text; -webkit-text-fill-color: transparent; }\r\n        .subsection { margin-bottom: 18px; }\r\n        .subsection-title { color: #4a5568; font-size: 15px; font-weight: 600; margin-bottom: 10px; padding: 8px 0; border-bottom: 1px solid #e2e8f0; }\r\n        .info-box { background: linear-gradient(135deg, #e6f3ff 0%, #f0f8ff 100%); border-left: 4px solid #3182ce; padding: 15px; margin: 10px 0; border-radius: 0 6px 6px 0; }\r\n        .warning-box { background: linear-gradient(135deg, #fff5e6 0%, #fef5e7 100%); border-left: 4px solid #dd6b20; padding: 15px; margin: 10px 0; border-radius: 0 6px 6px 0; }\r\n        .endpoint-group { background-color: #ffffff; border: 1px solid #e2e8f0; border-radius: 8px; margin: 12px 0; overflow: hidden; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }\r\n        .endpoint-header { background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%); padding: 12px 16px; border-bottom: 1px solid #e2e8f0; font-weight: 600; color: #2d3748; }\r\n        .endpoint { padding: 10px 16px; border-bottom: 1px solid #f1f5f9; font-family: 'Courier New', 'Monaco', monospace; font-size: 10px; background-color: #fafafa; }\r\n        .endpoint:last-child { border-bottom: none; }\r\n        .method { font-weight: bold; padding: 2px 6px; border-radius: 3px; margin-right: 8px; color: white; font-size: 9px; display: inline-block; width: 45px; text-align: center; }\r\n        .method.get { background-color: #48bb78; }\r\n        .method.post { background-color: #4299e1; }\r\n        .method.put { background-color: #ed8936; }\r\n        .method.patch { background-color: #9f7aea; }\r\n        .method.delete { background-color: #f56565; }\r\n        .endpoint-url { color: #2d3748; font-weight: 500; }\r\n        .endpoint-desc { color: #718096; font-size: 9px; margin-top: 4px; font-family: 'DejaVu Sans', sans-serif; }\r\n        table { width: 100%; border-collapse: collapse; margin: 12px 0; font-size: 10px; background-color: white; border-radius: 6px; overflow: hidden; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }\r\n        th { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 12px 10px; text-align: left; font-weight: 600; font-size: 10px; }\r\n        td { padding: 10px; border-bottom: 1px solid #f1f5f9; vertical-align: top; }\r\n        tr:nth-child(even) { background-color: #f8f9fa; }\r\n        .data-type { background-color: #e6fffa; color: #234e52; padding: 2px 6px; border-radius: 3px; font-family: 'Courier New', monospace; font-size: 9px; font-weight: 500; }\r\n        .role-badge { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 4px 8px; border-radius: 12px; font-size: 9px; font-weight: 600; margin: 2px; display: inline-block; }\r\n        .footer { margin-top: 40px; padding: 20px; background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%); border-radius: 8px; text-align: center; border-top: 3px solid #667eea; }\r\n        .footer p { margin: 5px 0; color: #718096; font-size: 10px; }\r\n        .page-break { page-break-before: always; }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"header\">\r\n        <h1>PRISAA Sports Management System</h1>\r\n        <p class=\"subtitle\">Complete API Documentation for Frontend Developers</p>\r\n        <span class=\"version\">Version 1.0.0</span>\r\n    </div>\r\n\r\n    <div class=\"toc\">\r\n        <h2>Table of Contents</h2>\r\n        <ul>\r\n            <li><a href=\"#overview\">1. API Overview</a></li>\r\n            <li><a href=\"#authentication\">2. Authentication</a></li>\r\n            <li><a href=\"#public-api\">3. Public API</a></li>\r\n            <li><a href=\"#users\">4. User Management</a></li>\r\n            <li><a href=\"#schools\">5. School Management</a></li>\r\n            <li><a href=\"#participants\">6. Participant Management</a></li>\r\n            <li><a href=\"#categories\">7. Category Management</a></li>\r\n            <li><a href=\"#sports\">8. Sport Management</a></li>\r\n            <li><a href=\"#teams\">9. Team Management</a></li>\r\n            <li><a href=\"#venues\">10. Venue Management</a></li>\r\n            <li><a href=\"#tournaments\">11. Tournament Management</a></li>\r\n            <li><a href=\"#schedules\">12. Schedule Management</a></li>\r\n            <li><a href=\"#matches\">13. Match Management</a></li>\r\n            <li><a href=\"#officials\">14. Official Management</a></li>\r\n            <li><a href=\"#results\">15. Result Management</a></li>\r\n            <li><a href=\"#rankings\">16. Ranking System</a></li>\r\n            <li><a href=\"#medals\">17. Medal Tally System</a></li>\r\n            <li><a href=\"#prisaa-years\">18. PRISAA Year Management</a></li>\r\n            <li><a href=\"#overall-champions\">19. Overall Champion Tracking</a></li>\r\n            <li><a href=\"#data-structures\">20. Data Structures</a></li>\r\n            <li><a href=\"#frontend-guide\">21. Frontend Integration Guide</a></li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"overview\">\r\n        <h2 class=\"section-title\">1. API Overview</h2>\r\n        <div class=\"info-box\">\r\n            <strong>Base URL:</strong> <code>http://localhost:8000/api</code><br>\r\n            <strong>Content-Type:</strong> <code>application/json</code><br>\r\n            <strong>Authentication:</strong> Laravel Sanctum (Bearer Token)<br>\r\n            <strong>API Version:</strong> 1.0.0\r\n        </div>\r\n        <p>This REST API provides comprehensive backend functionality for managing the Private Schools Athletic Association (PRISAA) Games, including multi-level tournaments, historical record tracking, participant profiling, scheduling, and results management. The system implements role-based access control (RBAC) with three distinct user roles: <strong>admin</strong>, <strong>coach</strong>, and <strong>tournament manager</strong>.</p>\r\n\r\n        <div class=\"info-box\">\r\n            <strong>Key Features:</strong><br>\r\n            • <strong>Profiling:</strong> Comprehensive participant and school management<br>\r\n            • <strong>Scheduling:</strong> Advanced event and venue scheduling system<br>\r\n            • <strong>Results:</strong> Live results tracking and historical records<br>\r\n            • <strong>Multi-Level Management:</strong> Provincial, Regional, and National tournaments<br>\r\n            • <strong>Historical Tracking:</strong> Year-by-year PRISAA Games records (2017-current)\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"authentication\">\r\n        <h2 class=\"section-title\">2. Authentication</h2>\r\n        <div class=\"warning-box\"><strong>Important:</strong> All protected API endpoints require a valid Bearer token in the <code>Authorization</code> header.</div>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Authentication Endpoints</div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/auth/register</span><div class=\"endpoint-desc\">Register a new user account.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/auth/login</span><div class=\"endpoint-desc\">Login and receive authentication token.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/auth/logout</span><div class=\"endpoint-desc\">Logout and revoke current token (requires auth).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/auth/logout-all</span><div class=\"endpoint-desc\">Logout from all devices (requires auth).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/auth/me</span><div class=\"endpoint-desc\">Get authenticated user information (requires auth).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/auth/refresh</span><div class=\"endpoint-desc\">Get a new token (requires auth).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/auth/forgot-password</span><div class=\"endpoint-desc\">Request a password reset token.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/auth/reset-password</span><div class=\"endpoint-desc\">Reset password using a token.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section page-break\" id=\"public-api\">\r\n        <h2 class=\"section-title\">3. Public API Endpoints</h2>\r\n        <div class=\"info-box\">The following endpoints are publicly accessible and do not require authentication. They provide read-only access to general information.</div>\r\n        \r\n        <div class=\"subsection\">\r\n            <h3 class=\"subsection-title\">Public Data Access</h3>\r\n            <div class=\"endpoint-group\">\r\n                <div class=\"endpoint-header\">Public Information</div>\r\n                <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/public/schools</span><div class=\"endpoint-desc\">List all schools.</div></div>\r\n                <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/public/schools/{school}</span><div class=\"endpoint-desc\">Get a specific school.</div></div>\r\n                <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/public/sports</span><div class=\"endpoint-desc\">List all sports.</div></div>\r\n                <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/public/sports/{sport}</span><div class=\"endpoint-desc\">Get a specific sport.</div></div>\r\n                <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/public/schedules</span><div class=\"endpoint-desc\">List all schedules.</div></div>\r\n                <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/public/matches</span><div class=\"endpoint-desc\">List all matches.</div></div>\r\n                <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/public/results</span><div class=\"endpoint-desc\">List all results.</div></div>\r\n                <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/public/rankings</span><div class=\"endpoint-desc\">List all rankings.</div></div>\r\n                <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/public/medals</span><div class=\"endpoint-desc\">List all medal tallies.</div></div>\r\n                <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/public/tournaments</span><div class=\"endpoint-desc\">List all tournaments.</div></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section page-break\" id=\"users\">\r\n        <h2 class=\"section-title\">4. User Management</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">User Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/users</span><div class=\"endpoint-desc\">List all users (Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/users</span><div class=\"endpoint-desc\">Create a new user (Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/users/role/{role}</span><div class=\"endpoint-desc\">Get users by role (Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/users/profile</span><div class=\"endpoint-desc\">Get own user profile.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/users/profile</span><div class=\"endpoint-desc\">Update own user profile.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/users/change-password</span><div class=\"endpoint-desc\">Change own password.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/users/{user}</span><div class=\"endpoint-desc\">Get a specific user (Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/users/{user}</span><div class=\"endpoint-desc\">Update a specific user (Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/users/{user}</span><div class=\"endpoint-desc\">Delete a user (Admin).</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"schools\">\r\n        <h2 class=\"section-title\">5. School Management</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">School Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/schools</span><div class=\"endpoint-desc\">List all schools.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/schools</span><div class=\"endpoint-desc\">Create a new school (Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/schools/{school}</span><div class=\"endpoint-desc\">Get a specific school.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/schools/{school}</span><div class=\"endpoint-desc\">Update a school (Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/schools/{school}</span><div class=\"endpoint-desc\">Delete a school (Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/schools/{school}/statistics</span><div class=\"endpoint-desc\">Get statistics for a school.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/schools/region/{region}</span><div class=\"endpoint-desc\">Get schools by region.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"participants\">\r\n        <h2 class=\"section-title\">6. Participant Management</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Participant Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/participants</span><div class=\"endpoint-desc\">List all participants with filtering options.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/participants</span><div class=\"endpoint-desc\">Create a new participant (Admin/Manager).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/participants/{participant}</span><div class=\"endpoint-desc\">Get a specific participant's details.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/participants/{participant}</span><div class=\"endpoint-desc\">Update participant information (Admin/Manager).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/participants/{participant}</span><div class=\"endpoint-desc\">Delete a participant (Admin only).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/participants/school/{schoolId}</span><div class=\"endpoint-desc\">Get participants by school.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/participants/category/{categoryId}</span><div class=\"endpoint-desc\">Get participants by category.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/participants/{participant}/performance</span><div class=\"endpoint-desc\">Get performance history for a participant.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"categories\">\r\n        <h2 class=\"section-title\">7. Category Management</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Category Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/categories</span><div class=\"endpoint-desc\">List all categories (Elementary, High School, College).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/categories</span><div class=\"endpoint-desc\">Create a new category (Admin only).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/categories/{category}</span><div class=\"endpoint-desc\">Get a specific category.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/categories/{category}</span><div class=\"endpoint-desc\">Update a category (Admin only).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/categories/{category}</span><div class=\"endpoint-desc\">Delete a category (Admin only).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/categories/{category}/statistics</span><div class=\"endpoint-desc\">Get statistics for a category.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section page-break\" id=\"sports\">\r\n        <h2 class=\"section-title\">8. Sport Management</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Sport Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/sports</span><div class=\"endpoint-desc\">List all sports.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/sports</span><div class=\"endpoint-desc\">Create a new sport (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/sports/{sport}</span><div class=\"endpoint-desc\">Get a specific sport.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/sports/{sport}</span><div class=\"endpoint-desc\">Update a sport (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/sports/{sport}</span><div class=\"endpoint-desc\">Delete a sport (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/sports/category/{category}</span><div class=\"endpoint-desc\">Get sports by category.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/sports/{sport}/statistics</span><div class=\"endpoint-desc\">Get statistics for a sport.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"teams\">\r\n        <h2 class=\"section-title\">8. Team Management</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Team Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/teams</span><div class=\"endpoint-desc\">List all teams.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/teams</span><div class=\"endpoint-desc\">Create a new team (Coach/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/teams/{team}</span><div class=\"endpoint-desc\">Get a specific team.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/teams/{team}</span><div class=\"endpoint-desc\">Update a team (Coach/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/teams/{team}</span><div class=\"endpoint-desc\">Delete a team (Coach/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/teams/school/{schoolId}</span><div class=\"endpoint-desc\">Get teams by school.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/teams/sport/{sportId}</span><div class=\"endpoint-desc\">Get teams by sport.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/teams/{team}/statistics</span><div class=\"endpoint-desc\">Get statistics for a team.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method patch\">PATCH</span> <span class=\"endpoint-url\">/teams/{team}/performance</span><div class=\"endpoint-desc\">Update team performance data (Coach/Admin).</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"venues\">\r\n        <h2 class=\"section-title\">9. Venue Management</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Venue Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/venues</span><div class=\"endpoint-desc\">List all venues.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/venues</span><div class=\"endpoint-desc\">Create a new venue (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/venues/{venue}</span><div class=\"endpoint-desc\">Get a specific venue.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/venues/{venue}</span><div class=\"endpoint-desc\">Update a venue (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/venues/{venue}</span><div class=\"endpoint-desc\">Delete a venue (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/venues/{venue}/availability</span><div class=\"endpoint-desc\">Get availability for a venue.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/venues/{venue}/statistics</span><div class=\"endpoint-desc\">Get statistics for a venue.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section page-break\" id=\"tournaments\">\r\n        <h2 class=\"section-title\">10. Tournament Management</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Tournament Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/tournaments</span><div class=\"endpoint-desc\">List all tournaments.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/tournaments</span><div class=\"endpoint-desc\">Create a new tournament (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/tournaments/{tournament}</span><div class=\"endpoint-desc\">Get a specific tournament.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/tournaments/{tournament}</span><div class=\"endpoint-desc\">Update a tournament (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/tournaments/{tournament}</span><div class=\"endpoint-desc\">Delete a tournament (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/tournaments/{tournament}/register</span><div class=\"endpoint-desc\">Register a participant for a tournament.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method patch\">PATCH</span> <span class=\"endpoint-url\">/tournaments/{tournament}/status</span><div class=\"endpoint-desc\">Update the status of a tournament.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/tournaments/{tournament}/statistics</span><div class=\"endpoint-desc\">Get statistics for a tournament.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"schedules\">\r\n        <h2 class=\"section-title\">11. Schedule Management</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Schedule Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/schedules</span><div class=\"endpoint-desc\">List all schedules.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/schedules</span><div class=\"endpoint-desc\">Create a new schedule (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/schedules/{schedule}</span><div class=\"endpoint-desc\">Get a specific schedule.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/schedules/{schedule}</span><div class=\"endpoint-desc\">Update a schedule (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/schedules/{schedule}</span><div class=\"endpoint-desc\">Delete a schedule (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method patch\">PATCH</span> <span class=\"endpoint-url\">/schedules/{schedule}/status</span><div class=\"endpoint-desc\">Update the status of a schedule.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"matches\">\r\n        <h2 class=\"section-title\">12. Match Management</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Match Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/matches</span><div class=\"endpoint-desc\">List all matches.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/matches</span><div class=\"endpoint-desc\">Create a new match (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/matches/{gameMatch}</span><div class=\"endpoint-desc\">Get a specific match.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/matches/{gameMatch}</span><div class=\"endpoint-desc\">Update a match (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/matches/{gameMatch}</span><div class=\"endpoint-desc\">Delete a match (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method patch\">PATCH</span> <span class=\"endpoint-url\">/matches/{gameMatch}/score</span><div class=\"endpoint-desc\">Update the score of a match.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section page-break\" id=\"officials\">\r\n        <h2 class=\"section-title\">13. Official Management</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Official Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/officials</span><div class=\"endpoint-desc\">List all officials.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/officials</span><div class=\"endpoint-desc\">Create a new official (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/officials/{official}</span><div class=\"endpoint-desc\">Get a specific official.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/officials/{official}</span><div class=\"endpoint-desc\">Update an official (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/officials/{official}</span><div class=\"endpoint-desc\">Delete an official (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method patch\">PATCH</span> <span class=\"endpoint-url\">/officials/{official}/rating</span><div class=\"endpoint-desc\">Update the rating of an official.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"results\">\r\n        <h2 class=\"section-title\">14. Result Management</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Result Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/results</span><div class=\"endpoint-desc\">List all results.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/results</span><div class=\"endpoint-desc\">Create a new result (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/results/{result}</span><div class=\"endpoint-desc\">Get a specific result.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/results/{result}</span><div class=\"endpoint-desc\">Update a result (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/results/{result}</span><div class=\"endpoint-desc\">Delete a result (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method patch\">PATCH</span> <span class=\"endpoint-url\">/results/{result}/verify</span><div class=\"endpoint-desc\">Verify a result.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"rankings\">\r\n        <h2 class=\"section-title\">15. Ranking System</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Ranking Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/rankings</span><div class=\"endpoint-desc\">List all rankings.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/rankings</span><div class=\"endpoint-desc\">Create a new ranking (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/rankings/{ranking}</span><div class=\"endpoint-desc\">Get a specific ranking.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/rankings/{ranking}</span><div class=\"endpoint-desc\">Update a ranking (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/rankings/{ranking}</span><div class=\"endpoint-desc\">Delete a ranking (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/rankings/update</span><div class=\"endpoint-desc\">Trigger a recalculation of rankings.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"medals\">\r\n        <h2 class=\"section-title\">16. Medal Tally System</h2>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Medal Tally Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/medals</span><div class=\"endpoint-desc\">List all medal tallies.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/medals</span><div class=\"endpoint-desc\">Create a new medal tally entry (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/medals/{medalTally}</span><div class=\"endpoint-desc\">Get a specific medal tally.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/medals/{medalTally}</span><div class=\"endpoint-desc\">Update a medal tally (Manager/Admin).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/medals/{medalTally}</span><div class=\"endpoint-desc\">Delete a medal tally (Manager/Admin).</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"prisaa-years\">\r\n        <h2 class=\"section-title\">18. PRISAA Year Management</h2>\r\n        <div class=\"info-box\">Historical tracking system for PRISAA Games from 2017-2025, including host information, participation statistics, and yearly achievements.</div>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">PRISAA Year Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/prisaa-years</span><div class=\"endpoint-desc\">List all PRISAA Games years with pagination.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/prisaa-years</span><div class=\"endpoint-desc\">Create a new PRISAA year record (Admin only).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/prisaa-years/{prisaaYear}</span><div class=\"endpoint-desc\">Get specific year details.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/prisaa-years/{prisaaYear}</span><div class=\"endpoint-desc\">Update year information (Admin only).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/prisaa-years/{prisaaYear}</span><div class=\"endpoint-desc\">Delete a year record (Admin only).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/prisaa-years/{prisaaYear}/statistics</span><div class=\"endpoint-desc\">Get comprehensive statistics for a specific year.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/prisaa-years/{prisaaYear}/multi-level-breakdown</span><div class=\"endpoint-desc\">Get multi-level tournament breakdown for a year.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section\" id=\"overall-champions\">\r\n        <h2 class=\"section-title\">19. Overall Champion Tracking</h2>\r\n        <div class=\"info-box\">Multi-level champion tracking system for Provincial, Regional, and National tournaments with comprehensive school performance metrics.</div>\r\n        <div class=\"endpoint-group\">\r\n            <div class=\"endpoint-header\">Overall Champion Operations</div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/overall-champions</span><div class=\"endpoint-desc\">List all overall champions with filtering.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method post\">POST</span> <span class=\"endpoint-url\">/overall-champions</span><div class=\"endpoint-desc\">Create new champion record (Admin/Manager).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/overall-champions/{overallChampion}</span><div class=\"endpoint-desc\">Get specific champion details.</div></div>\r\n            <div class=\"endpoint\"><span class=\"method put\">PUT</span> <span class=\"endpoint-url\">/overall-champions/{overallChampion}</span><div class=\"endpoint-desc\">Update champion record (Admin/Manager).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method delete\">DELETE</span> <span class=\"endpoint-url\">/overall-champions/{overallChampion}</span><div class=\"endpoint-desc\">Delete champion record (Admin only).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/overall-champions/level/{level}</span><div class=\"endpoint-desc\">Get champions by tournament level (Provincial/Regional/National).</div></div>\r\n            <div class=\"endpoint\"><span class=\"method get\">GET</span> <span class=\"endpoint-url\">/overall-champions/school/{schoolId}</span><div class=\"endpoint-desc\">Get all championships won by a school.</div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"section page-break\" id=\"frontend-guide\">\r\n        <h2 class=\"section-title\">21. Frontend Integration Guide</h2>\r\n        \r\n        <div class=\"subsection\">\r\n            <h3 class=\"subsection-title\">Authentication Flow</h3>\r\n            <div class=\"info-box\">\r\n                <strong>Step 1:</strong> Login using <code>POST /api/login</code><br>\r\n                <strong>Step 2:</strong> Store the received token<br>\r\n                <strong>Step 3:</strong> Include token in all requests: <code>Authorization: Bearer {token}</code><br>\r\n                <strong>Step 4:</strong> Handle 401 responses by redirecting to login\r\n            </div>\r\n            \r\n            <h4>Example Login Request:</h4>\r\n            <pre style=\"background: #f8f9fa; padding: 10px; border-radius: 4px; font-size: 9px;\">\r\nPOST /api/login\r\nContent-Type: application/json\r\n\r\n{\r\n    \"email\": \"admin@example.com\",\r\n    \"password\": \"password\"\r\n}\r\n\r\nResponse:\r\n{\r\n    \"success\": true,\r\n    \"data\": {\r\n        \"user\": {...},\r\n        \"token\": \"1|abc123...\"\r\n    }\r\n}\r\n            </pre>\r\n        </div>\r\n\r\n        <div class=\"subsection\">\r\n            <h3 class=\"subsection-title\">Error Handling</h3>\r\n            <div class=\"warning-box\">\r\n                All API responses follow a consistent format. Always check the <code>success</code> field before processing data.\r\n            </div>\r\n            \r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>HTTP Status</th>\r\n                        <th>Meaning</th>\r\n                        <th>Frontend Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr><td>200</td><td>Success</td><td>Process response data</td></tr>\r\n                    <tr><td>401</td><td>Unauthorized</td><td>Redirect to login</td></tr>\r\n                    <tr><td>403</td><td>Forbidden</td><td>Show permission error</td></tr>\r\n                    <tr><td>422</td><td>Validation Error</td><td>Display field errors</td></tr>\r\n                    <tr><td>500</td><td>Server Error</td><td>Show generic error message</td></tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div class=\"subsection\">\r\n            <h3 class=\"subsection-title\">Pagination</h3>\r\n            <div class=\"info-box\">\r\n                Most list endpoints support pagination. Use <code>page</code> and <code>per_page</code> parameters.\r\n            </div>\r\n            \r\n            <h4>Example Pagination Request:</h4>\r\n            <pre style=\"background: #f8f9fa; padding: 10px; border-radius: 4px; font-size: 9px;\">\r\nGET /api/participants?page=2&per_page=20&search=john\r\n\r\nResponse:\r\n{\r\n    \"success\": true,\r\n    \"data\": [...],\r\n    \"meta\": {\r\n        \"current_page\": 2,\r\n        \"last_page\": 5,\r\n        \"per_page\": 20,\r\n        \"total\": 87\r\n    }\r\n}\r\n            </pre>\r\n        </div>\r\n\r\n        <div class=\"subsection\">\r\n            <h3 class=\"subsection-title\">Common Query Parameters</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Parameter</th>\r\n                        <th>Usage</th>\r\n                        <th>Example</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr><td>search</td><td>Text search</td><td><code>?search=basketball</code></td></tr>\r\n                    <tr><td>filter[field]</td><td>Filter by field</td><td><code>?filter[school_id]=1</code></td></tr>\r\n                    <tr><td>sort</td><td>Sort results</td><td><code>?sort=-created_at</code></td></tr>\r\n                    <tr><td>include</td><td>Include relations</td><td><code>?include=school,category</code></td></tr>\r\n                    <tr><td>page</td><td>Page number</td><td><code>?page=2</code></td></tr>\r\n                    <tr><td>per_page</td><td>Items per page</td><td><code>?per_page=50</code></td></tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div class=\"subsection\">\r\n            <h3 class=\"subsection-title\">Role-Based Access</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Role</th>\r\n                        <th>Permissions</th>\r\n                        <th>Frontend Considerations</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr><td><span class=\"role-badge\">admin</span></td><td>Full system access</td><td>Show all management features</td></tr>\r\n                    <tr><td><span class=\"role-badge\">manager</span></td><td>Tournament & event management</td><td>Hide user management, show event controls</td></tr>\r\n                    <tr><td><span class=\"role-badge\">user</span></td><td>View & basic operations</td><td>Read-only interface with limited actions</td></tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n        \r\n    <div class=\"section page-break\" id=\"data-structures\">\r\n        <h2 class=\"section-title\">20. Data Structures</h2>\r\n        \r\n        \r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">User Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>first_name</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>last_name</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>email</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>contact_number</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>role</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">School Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>name</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>address</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>region</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>contact_person</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>contact_number</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">Participant Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>first_name</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>last_name</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>date_of_birth</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>gender</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>school_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>category_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">Category Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>name</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>description</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>age_group</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">Sport Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>name</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>description</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>category</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>rules</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">Team Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>name</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>sport_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>school_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>category_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">Venue Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>name</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>location</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>capacity</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>type</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>facilities</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">Tournament Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>name</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>description</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>start_date</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>end_date</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>level</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>prisaa_year_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">Schedule Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>tournament_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>match_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>venue_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>scheduled_date</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>start_time</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>end_time</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">GameMatch Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>tournament_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>team1_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>team2_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>schedule_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>status</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>result_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">Official Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>first_name</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>last_name</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>role</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>sport_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>certification_level</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">Result Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>match_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>winner_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>score_team1</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>score_team2</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>status</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">Ranking Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>tournament_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>team_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>participant_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>rank</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>points</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">MedalTally Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>school_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>tournament_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>gold</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>silver</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>bronze</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>total_points</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">PrisaaYear Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>year</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>host_region</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>host_city</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>start_date</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>end_date</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>total_participants</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>highlights</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>achievements</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                    <div class=\"subsection\">\r\n                <h3 class=\"subsection-title\">OverallChampion Object</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Field</th>\r\n                            <th>Type</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>id</td><td><span class=\"data-type\">integer</span></td><td>Unique identifier</td></tr>\r\n                                                    <tr><td>prisaa_year_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>school_id</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>level</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>total_gold</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>total_silver</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>total_bronze</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>total_points</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                    <tr><td>overall_rank</td><td><span class=\"data-type\">string</span></td><td></td></tr>\r\n                                                <tr><td>created_at</td><td><span class=\"data-type\">timestamp</span></td><td>Creation timestamp</td></tr>\r\n                        <tr><td>updated_at</td><td><span class=\"data-type\">timestamp</span></td><td>Last update timestamp</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </div>\r\n\r\n    <div class=\"footer\">\r\n        <p><strong>PRISAA Management System API Documentation</strong></p>\r\n        <p>Version 3.0.0 | Generated 2025-09-03 09:21:55</p>\r\n        <p>Complete API for Private Schools Athletic Association Games Management</p>\r\n    </div>\r\n</body>\r\n</html>\r\n</body>\r\n</html>"
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
          set-cookie: 'XSRF-TOKEN=eyJpdiI6ImkyM3FjdGdLaWxwUklIMmltVk5xS0E9PSIsInZhbHVlIjoicWhOUlZmWmhRNWFPVjgwejVqTXNYbmszTkVISEpnS1h4VkRqaE5kTldXOUdIcWxWcUFuRHFHdVd5cFZDYjZxL2tXSmdSVzloSTIvNERMdDh6Yk1ucE5yR1lVN2tvemo0S2wxK2llWmwxRFoxNFVWL1Q1U0d5aVNnaXhyM2hpK2UiLCJtYWMiOiIyYTgxZGFlMTZlZWI1MzU0OTlmNzVlY2VmM2MzYWI4ZjNhOGIyZjVjNzdjYzE2YWNmZDhiNDZlNzE1MmQ0MmM2IiwidGFnIjoiIn0%3D; expires=Wed, 03 Sep 2025 11:21:55 GMT; Max-Age=7200; path=/; samesite=lax; prisaa_sports_management_system_session=eyJpdiI6IjYrYzZYMzVkQi90R0pPbE1pZC9RSXc9PSIsInZhbHVlIjoiSWR0aHhmQ003akx5Ky9NVUsxV0h5b1N1V2dyUXp1blJSYUJ6Vm5DZTZUMEh3K25HOUsrYzJoZ25tR2ZzNWR5bWpyN3VFeUdHVTlDYmtQWXhOTnREaG5qc2g1S0VqNXBxZE1abEkrZnJnNTZLVTg0R0JiMFZWOThIdTEvSWRnek8iLCJtYWMiOiJlYmRmZGVlMjczNGIyMDJmODU0MzU0NGJlZGNjMGJmYzUxMTA2Mjg5ZWFmNTFhMGJlYWExNGNhNTc2OTc0MjE1IiwidGFnIjoiIn0%3D; expires=Wed, 03 Sep 2025 11:21:55 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
